name: Deploy to TestFlight

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '**/*.swift'
      - '**/*.xcodeproj/**'
      - '**/*.xcworkspace/**'
      - 'Podfile'
      - 'Podfile.lock'
      - '.github/workflows/deploy.yml'

permissions: write-all

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: macos-15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.0'

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.0'
          bundler-cache: true

      - name: Cache Pods
        uses: actions/cache@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Cocoapods
        run: |
          gem install cocoapods
          pod install

      - name: Import Certificate
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          KEYCHAIN_PATH: /Users/runner/Library/Keychains/build.keychain
        run: |
          # Echo steps for debugging
          echo "Setting up keychain..."
          
          # Set keychain password
          KEYCHAIN_PASSWORD="temporary"
          
          # Create temporary certificate file
          echo "Creating temporary certificate..."
          echo "$CERTIFICATE_BASE64" | base64 --decode > certificate.p12
          
          # Print certificate file info
          echo "Certificate file info:"
          ls -l certificate.p12
          
          # Create keychain
          echo "Creating keychain..."
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          
          # Configure keychain
          echo "Configuring keychain..."
          security set-keychain-settings -t 3600 -l "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          
          # Add to keychain list
          echo "Adding to keychain list..."
          security list-keychains -d user -s "$KEYCHAIN_PATH" $(security list-keychains -d user | tr -d '"')
          
          # Import certificate
          echo "Importing certificate..."
          security import certificate.p12 -k "$KEYCHAIN_PATH" -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          
          # Update keychain search list
          echo "Updating keychain search list..."
          security list-keychains -s "$KEYCHAIN_PATH"
          
          # Set as default keychain
          echo "Setting as default keychain..."
          security default-keychain -s "$KEYCHAIN_PATH"
          
          # Set partition list
          echo "Setting partition list..."
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          
          # Verify setup
          echo "Verifying setup..."
          security find-identity -v -p codesigning "$KEYCHAIN_PATH"
          
          # Clean up certificate file
          echo "Cleaning up..."
          rm certificate.p12

      - name: Build and Deploy
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        run: |
          # Create build directory
          BUILD_DIR="${GITHUB_WORKSPACE}/build"
          mkdir -p "$BUILD_DIR"
          
          # Build the app
          echo "Building app..."
          xcodebuild -workspace CleanMate.xcworkspace \
            -scheme CleanMate \
            -configuration Release \
            -archivePath "$BUILD_DIR/CleanMate.xcarchive" \
            clean archive \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=$APPLE_TEAM_ID \
            | xcpretty
          
          # Export the app
          echo "Exporting app..."
          xcodebuild -exportArchive \
            -archivePath "$BUILD_DIR/CleanMate.xcarchive" \
            -exportOptionsPlist exportOptions.plist \
            -exportPath "$BUILD_DIR" \
            | xcpretty
          
          # Upload to TestFlight
          echo "Uploading to TestFlight..."
          xcrun altool --upload-app \
            --type ios \
            --file "$BUILD_DIR/CleanMate.ipa" \
            --username "$APPLE_ID" \
            --password "$APPLE_APP_SPECIFIC_PASSWORD"

      - name: Cleanup
        if: always()
        run: |
          security delete-keychain /Users/runner/Library/Keychains/build.keychain || true
