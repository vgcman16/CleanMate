default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    setup_ci if ENV['CI']
    
    app_store_connect_api_key(
      key_id: ENV["ASC_KEY_ID"],
      issuer_id: ENV["ASC_ISSUER_ID"],
      key_content: ENV["ASC_PRIVATE_KEY"]
    ) if ENV["ASC_KEY_ID"]

    # Import distribution certificate
    import_certificate(
      certificate_path: "certificates/distribution.cer",
      certificate_password: ENV["CERTIFICATE_PASSWORD"] || "cleanmate123",
      keychain_name: ENV["MATCH_KEYCHAIN_NAME"] || "CleanMate.keychain"
    )

    # Update build number
    increment_build_number(
      build_number: latest_testflight_build_number + 1
    )

    # Build the app
    build_app(
      scheme: "CleanMate",
      export_method: "app-store",
      configuration: "Release",
      clean: true,
      export_options: {
        provisioningProfiles: { 
          "com.cleanmate.CleanMate" => "match AppStore com.cleanmate.CleanMate"
        }
      }
    )

    # Upload to TestFlight
    upload_to_testflight(
      apple_id: ENV["APPLE_ID"] || "vgcman1993@gmail.com",
      team_id: ENV["APPLE_TEAM_ID"] || "ZQ78724VB2",
      app_specific_password: ENV["APPLE_APP_SPECIFIC_PASSWORD"] || "eieb-fcff-csie-hiwl",
      skip_waiting_for_build_processing: true
    )
  end

  desc "Run tests"
  lane :test do
    run_tests(
      scheme: "CleanMate",
      devices: ["iPhone 15 Pro"]
    )
  end

  desc "Create certificates and profiles"
  lane :certificates do
    match(
      type: "appstore",
      app_identifier: "com.cleanmate.CleanMate",
      readonly: true
    )
  end
end
