name: Deploy to TestFlight

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to TestFlight
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.0'
          bundler-cache: true

      - name: Debug Project Structure
        run: |
          echo "Root directory:"
          pwd
          echo "\nRoot contents:"
          ls -la
          echo "\nCleanMate directory contents:"
          ls -la CleanMate
          echo "\nVerifying Xcode project:"
          test -d "CleanMate/CleanMate.xcodeproj" && echo "✅ Xcode project found" || echo "❌ Xcode project not found"

      - name: Install Cocoapods
        env:
          LANG: en_US.UTF-8
        run: |
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          gem install cocoapods
          pod repo update
          pod install --verbose

      - name: Set up certificates
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: cleanmate123
          KEYCHAIN_PATH: ${{ runner.temp }}/app-signing.keychain-db
        run: |
          # Clean up any existing keychain
          security delete-keychain $KEYCHAIN_PATH || true
          
          # Create a new keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # Import certificate to keychain
          echo -n "$CERTIFICATE_BASE64" | base64 --decode > /tmp/certificate.p12
          security import /tmp/certificate.p12 -k $KEYCHAIN_PATH -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          
          # Add keychain to search list
          security list-keychains -d user -s $KEYCHAIN_PATH $(security list-keychains -d user | tr -d '"')
          security default-keychain -s $KEYCHAIN_PATH
          
          # Allow codesign to access keychain
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # Verify setup
          security find-identity -v -p codesigning $KEYCHAIN_PATH

      - name: Build and Deploy
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          # Build the app
          xcodebuild -workspace CleanMate.xcworkspace -scheme CleanMate -configuration Release -archivePath $PWD/build/CleanMate.xcarchive clean archive
          
          # Export the app
          xcodebuild -exportArchive -archivePath $PWD/build/CleanMate.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build
          
          # Upload to TestFlight
          xcrun altool --upload-app --type ios --file $PWD/build/CleanMate.ipa --username "$APPLE_ID" --password "$APPLE_APP_SPECIFIC_PASSWORD"

      - name: Cleanup Keychain
        if: always()
        run: |
          security delete-keychain $KEYCHAIN_PATH || true
